#!/bin/bash
# 
# Copyright (c) 2012 Dominik Meissner <dome@code-breaker.de>
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted (subject to the limitations in the
# disclaimer below) provided that the following conditions are met:
# 
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the
#    distribution.
# 
#  * Neither the name of <Owner Organization> nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
# GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
# HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

VOLUME_STEP=5
NOTIFY_WIDTH=20

get-volume() {
	amixer get Master,0 | tail -n 1 | sed -e 's/[]].*//' -e 's/.*[[]//' -e 's/%//'
}

get-muted() {
	if [[ $(amixer get Master,0 | tail -n 1 | sed -e 's/.*[[]//' -e 's/[]].*//') = "off" ]]; then
		echo "[muted]"
	fi
}

notify-volume() {
	BAR=""
	CNT=0
	VOL=$(get-volume)

	while [ $VOL -ge $((100/$NOTIFY_WIDTH)) ]
	do
		BAR="${BAR}#"
		CNT=$(($CNT+1))
		VOL=$(($VOL-$((100/$NOTIFY_WIDTH))))
	done

	while [ $CNT -lt $NOTIFY_WIDTH ]
	do
		BAR="${BAR}-"
		CNT=$(($CNT+1))
	done

	if [[ -z $(get-muted) ]]; then
		notify-send -t 500 "Volume:" [$BAR]
	else
		notify-send -t 500 "Volume [muted]:" [$BAR]
	fi
}

notify-cmus() {
	STATUS=$(cmus-remote -Q 2> /dev/null)
	ARTIST=$(echo "$STATUS" | grep "^tag artist " | cut -d " " -f 3-)
	TITLE=$(echo "$STATUS" | grep "^tag title " | cut -d " " -f 3-)
	FILE=$(echo "$STATUS" | grep "^file " | cut -d " " -f 2- | sed 's,.*/,,')
	STATUS=$(echo "$STATUS" | grep "^status " | cut -d " " -f 1-)
	if [[ -z $TITLE && -z $ARTIST ]]; then
		INFO=$FILE
	elif [[ -z $TITLE && -n $ARTIST ]]; then
		INFO="$ARTIST - $FILE"
	else
		INFO="$ARTIST - $TITLE"
	fi
	notify-send -t 1500 "Current Song ($STATUS);" "$INFO"
}

case $1 in
	previous)
		cmus-remote -r
		notify-cmus
		;;
	play-pause)
		cmus-remote -u
		notify-cmus
		;;
	next)
		cmus-remote -n
		notify-cmus
		;;
	up)
		amixer set Master,0 $(($(get-volume)+$VOLUME_STEP))% > /dev/null
		notify-volume
		;;
	down)
		amixer set Master,0 $(($(get-volume)-$VOLUME_STEP))% > /dev/null
		notify-volume
		;;
	mute)
		amixer set Master mute > /dev/null
		notify-volume
		;;
	unmute)
		amixer set Master unmute > /dev/null
		notify-volume
		;;
	toggle-mute)
		if [[ -z $(get-muted) ]]; then
			amixer set Master mute > /dev/null
		else
			amixer set Master unmute > /dev/null
		fi
		notify-volume
		;;
	get)
		echo "Volume: $(get-volume)% $(get-muted)"
		;;
	*)
		echo "Usage: $0 [ previous | play-pause | next |  up | down | mute | unmute | toggle-mute | get ]"
		;;
esac
